From 165d09fb20d88143f0dfe8c34d2e6f6e1048ab21 Mon Sep 17 00:00:00 2001
Message-Id: <165d09fb20d88143f0dfe8c34d2e6f6e1048ab21.1671097452.git.stefan@agner.ch>
From: Stefan Agner <stefan@agner.ch>
Date: Wed, 14 Dec 2022 10:38:38 +0100
Subject: [PATCH 1/6] [rest] use correct Content-Type header for RESTful API

Set the content type to text/plain by default, and application/json
where needed.
---
 src/rest/resource.cpp |  3 +++
 src/rest/response.cpp | 16 ++++++++++++----
 src/rest/response.hpp | 21 ++++++++++++++++++++-
 3 files changed, 35 insertions(+), 5 deletions(-)

diff --git a/src/rest/resource.cpp b/src/rest/resource.cpp
index 5c4cf7afcf..4a90d6a6dd 100644
--- a/src/rest/resource.cpp
+++ b/src/rest/resource.cpp
@@ -187,6 +187,7 @@ void Resource::ErrorHandler(Response &aResponse, HttpStatusCode aErrorCode) cons
     std::string errorMessage = GetHttpStatus(aErrorCode);
     std::string body         = Json::Error2JsonString(aErrorCode, errorMessage);
 
+    aResponse.SetContentType(OT_REST_RESPONSE_CONTENT_TYPE_JSON);
     aResponse.SetResponsCode(errorMessage);
     aResponse.SetBody(body);
     aResponse.SetComplete();
@@ -222,6 +223,7 @@ void Resource::GetNodeInfo(Response &aResponse) const
     node.mRlocAddress = *otThreadGetRloc(mInstance);
 
     body = Json::Node2JsonString(node);
+    aResponse.SetContentType(OT_REST_RESPONSE_CONTENT_TYPE_JSON);
     aResponse.SetBody(body);
 
 exit:
@@ -539,6 +541,7 @@ exit:
 
     if (error == OTBR_ERROR_NONE)
     {
+        aResponse.SetContentType(OT_REST_RESPONSE_CONTENT_TYPE_JSON);
         aResponse.SetStartTime(steady_clock::now());
         aResponse.SetCallback();
     }
diff --git a/src/rest/response.cpp b/src/rest/response.cpp
index 64208aacd5..2682c1afb1 100644
--- a/src/rest/response.cpp
+++ b/src/rest/response.cpp
@@ -30,7 +30,6 @@
 
 #include <stdio.h>
 
-#define OT_REST_RESPONSE_CONTENT_TYPE_JSON "application/json"
 #define OT_REST_RESPONSE_ACCESS_CONTROL_ALLOW_ORIGIN "*"
 #define OT_REST_RESPONSE_ACCESS_CONTROL_ALLOW_HEADERS                                                              \
     "Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, " \
@@ -42,15 +41,13 @@ namespace rest {
 
 Response::Response(void)
     : mCallback(false)
+    , mContentType(OT_REST_RESPONSE_CONTENT_TYPE_TEXT)
     , mComplete(false)
 {
     // HTTP protocol
     mProtocol = "HTTP/1.1 ";
 
     // Pre-defined headers
-    mHeaderField.push_back("Content-Type");
-    mHeaderValue.push_back(OT_REST_RESPONSE_CONTENT_TYPE_JSON);
-
     mHeaderField.push_back("Access-Control-Allow-Origin");
     mHeaderValue.push_back(OT_REST_RESPONSE_ACCESS_CONTROL_ALLOW_ORIGIN);
 
@@ -91,6 +88,16 @@ void Response::SetCallback(void)
     mCallback = true;
 }
 
+void Response::SetContentType(const std::string &aContentType)
+{
+    mContentType = aContentType;
+}
+
+std::string Response::GetContentType() const
+{
+    return mContentType;
+}
+
 void Response::SetBody(std::string &aBody)
 {
     mBody = aBody;
@@ -112,6 +119,7 @@ std::string Response::Serialize(void) const
     std::string spacer = "\r\n";
     std::string ret(mProtocol + " " + mCode);
 
+    ret += (spacer + "Content-Type: " + mContentType);
     for (index = 0; index < mHeaderField.size(); index++)
     {
         ret += (spacer + mHeaderField[index] + ": " + mHeaderValue[index]);
diff --git a/src/rest/response.hpp b/src/rest/response.hpp
index ecfe98f4de..8af6d3285d 100644
--- a/src/rest/response.hpp
+++ b/src/rest/response.hpp
@@ -40,6 +40,9 @@
 
 #include "rest/types.hpp"
 
+#define OT_REST_RESPONSE_CONTENT_TYPE_JSON "application/json"
+#define OT_REST_RESPONSE_CONTENT_TYPE_TEXT "plain/text"
+
 using std::chrono::duration_cast;
 using std::chrono::microseconds;
 using std::chrono::seconds;
@@ -61,7 +64,22 @@ public:
      *
      *
      */
-    Response(void);
+    Response();
+
+    /**
+     * This method set the response Content-Type header.
+     *
+     * @param[in] aContentType  A string to be set as response Content-Type header.
+     *
+     */
+    void SetContentType(const std::string &aContentType);
+
+    /**
+     * This method return a string of the response Content-Type.
+     *
+     * @returns A string containing the Content-Type.
+     */
+    std::string GetContentType(void) const;
 
     /**
      * This method set the response body.
@@ -141,6 +159,7 @@ private:
     std::vector<std::string> mHeaderValue;
     std::string              mCode;
     std::string              mProtocol;
+    std::string              mContentType;
     std::string              mBody;
     bool                     mComplete;
     steady_clock::time_point mStartTime;
-- 
2.39.0

